{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.iconList = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar iconList = function iconList(iconSet) {\n  var list = [];\n  iconSet.icons.forEach(function (icon) {\n    list.push(icon.properties.name.split(', ')[0]);\n  });\n  return list;\n};\n\nexports.iconList = iconList;\n\nfunction getSvg(icon, iconSet, styles, size, className) {\n  var find = function find(iconEl) {\n    return iconEl.properties.name.split(', ').includes(icon);\n  };\n\n  var currentIcon = iconSet.icons.find(find);\n\n  var renderPath = function renderPath(iconObj) {\n    return function (path, index) {\n      var attrs = iconObj.attrs && iconObj.attrs[index] || {};\n      return _react.default.createElement(\"path\", _extends({\n        style: styles.path,\n        key: index,\n        d: path\n      }, attrs));\n    };\n  };\n\n  if (currentIcon) {\n    return _react.default.createElement(\"svg\", {\n      className: className,\n      style: styles.svg,\n      width: size,\n      height: size,\n      viewBox: \"0 0 \".concat(currentIcon.icon.width || '1024', \" 1024\"),\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, currentIcon.icon.paths.map(renderPath(currentIcon.icon)));\n  }\n\n  console.warn(\"icon \".concat(icon, \" does not exist.\"));\n  return '';\n}\n\nvar Icon = function Icon(props) {\n  var color = props.color,\n      size = props.size,\n      icon = props.icon,\n      iconSet = props.iconSet,\n      className = props.className;\n  var styles = {\n    svg: {\n      display: 'inline-block',\n      verticalAlign: 'middle'\n    },\n    path: {\n      fill: color\n    }\n  };\n  return getSvg(icon, iconSet, styles, size, className);\n};\n\nIcon.propTypes = {\n  className: _propTypes.default.string,\n  iconSet: _propTypes.default.shape({}).isRequired,\n  color: _propTypes.default.string.isRequired,\n  icon: _propTypes.default.string.isRequired,\n  size: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired\n};\nIcon.defaultProps = {\n  className: ''\n};\nvar _default = Icon;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}